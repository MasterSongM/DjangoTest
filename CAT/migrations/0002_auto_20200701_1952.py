# Generated by Django 3.0.7 on 2020-07-01 11:52

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('CAT', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Disruptor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=20)),
                ('freq', models.IntegerField(verbose_name='how many times has it been tested')),
            ],
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('times', models.IntegerField(verbose_name='the times of participation so far')),
                ('trial_num', models.IntegerField(verbose_name='the number of trials finished in this exam')),
                ('pre_theta', models.FloatField(verbose_name='the theta parameter of participant before exam')),
                ('curr_theta', models.FloatField(verbose_name='the theta parameter of participant to the current stage')),
                ('info_sum', models.FloatField(verbose_name='total information provided by tested trials')),
                ('finish_status', models.BooleanField(default=False, verbose_name='has the exam been finished')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='time when exam is created')),
                ('finish_time', models.DateTimeField(verbose_name='time when exam is finished')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=20)),
                ('guess', models.FloatField(verbose_name='asymptotic-guessing parameter')),
                ('scale', models.FloatField(verbose_name='scale-discrimination parameter')),
                ('diff', models.FloatField(verbose_name='difficulty-location parameter')),
                ('freq', models.IntegerField(verbose_name='how many times has it been tested')),
            ],
        ),
        migrations.CreateModel(
            name='Trial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_seq', models.IntegerField(verbose_name='the order in a exam')),
                ('theta', models.FloatField(verbose_name='current theta parameter')),
                ('info', models.FloatField(verbose_name='the information provided by this trial')),
                ('result', models.BooleanField(null=True, verbose_name='the order in a exam')),
                ('disruptor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CAT.Disruptor', verbose_name='the disruptor used in this trial')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CAT.Examination', verbose_name='which examination does it belong to')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CAT.Item', verbose_name='the item used in this trial')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('passwd', models.CharField(max_length=50)),
                ('theta', models.FloatField(verbose_name='the theta parameter of participant')),
            ],
        ),
        migrations.DeleteModel(
            name='Test',
        ),
        migrations.AddField(
            model_name='examination',
            name='items',
            field=models.ManyToManyField(through='CAT.Trial', to='CAT.Item'),
        ),
        migrations.AddField(
            model_name='examination',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CAT.User', verbose_name='who started this exam'),
        ),
    ]
